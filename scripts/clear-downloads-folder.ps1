# === CONFIGURATION ===
$ExcludedFolders = @("archive", "64Gram Desktop", "TabSessionManager - Backup", "Telegram Desktop")
$DownloadsPath = "$env:USERPROFILE\Downloads"
$MaxAgeDays = 31
$CutoffDate = (Get-Date).AddDays(-$MaxAgeDays)

# === FUNCTIONS ===
function Log {
  param([string]$Message)
  Write-Host $Message
}

function Try-DeleteFolder {
  param([string]$FolderPath)

  $Retry = $false
  try {
    Remove-Item -LiteralPath $FolderPath -Recurse -Force -ErrorAction Stop
    Start-Sleep -Milliseconds 300
    if (Test-Path $FolderPath) {
      $Retry = $true
    }
  }
  catch {
    $Retry = $true
    Log "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ '$FolderPath': $_"
  }

  if ($Retry) {
    try {
      Remove-Item -LiteralPath $FolderPath -Recurse -Force -ErrorAction Stop
      Start-Sleep -Milliseconds 300
      if (Test-Path $FolderPath) {
        Log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏: $FolderPath"
      }
      else {
        Log "üóÇÔ∏è –ü–æ–≤—Ç–æ—Ä–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: $FolderPath"
      }
    }
    catch {
      Log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è '$FolderPath': $_"
    }
  }
  else {
    Log "üóÇÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: $FolderPath"
  }
}

function Remove-Folders {
  param([string]$Path)

  Get-ChildItem -Path $Path -Directory -Force | ForEach-Object {
    $Folder = $_
    $FolderName = $Folder.Name

    if ($ExcludedFolders -contains $FolderName) {
      Log "‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ –ø–∞–ø–∫–∞: $FolderName"
      Get-ChildItem -Path $Folder.FullName -Force | ForEach-Object {
        if ($_.Name -ieq "desktop.ini" -or $_.Attributes -match "Hidden|System") {
          Log "   üîí –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª: $($_.Name)"
        }
        elseif ($_.LastWriteTime -gt $CutoffDate) {
          Log "   ‚åõ –ü—Ä–æ–ø—É—â–µ–Ω –ø–æ –¥–∞—Ç–µ: $($_.Name)"
        }
        else {
          try {
            if ($_.PSIsContainer) {
              Try-DeleteFolder -FolderPath $_.FullName
            }
            else {
              Remove-Item -LiteralPath $_.FullName -Force -ErrorAction Stop
              Log "   üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: $($_.Name)"
            }
          }
          catch {
            Log "   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ '$($_.FullName)': $_"
          }
        }
      }
    }
    else {
      if ($Folder.LastWriteTime -gt $CutoffDate) {
        Log "‚åõ –ü—Ä–æ–ø—É—â–µ–Ω–∞ –ø–æ –¥–∞—Ç–µ: $FolderName"
      }
      else {
        $FileCount = (Get-ChildItem -Path $Folder.FullName -Recurse -Force -File | Where-Object {
            $_.Name -ne "desktop.ini" -and $_.Attributes -notmatch "Hidden|System" -and $_.LastWriteTime -le $CutoffDate
          }).Count
        Log "üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É–¥–∞–ª–µ–Ω–∏—é '$FolderName' ‚Äî —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ä—à–µ $MaxAgeDays –¥–Ω–µ–π: $FileCount"
        Try-DeleteFolder -FolderPath $Folder.FullName
      }
    }
  }
}

function Remove-FilesInRoot {
  param([string]$Path)

  Get-ChildItem -Path $Path -File -Force | ForEach-Object {
    if ($_.Name -ieq "desktop.ini" -or $_.Attributes -match "Hidden|System") {
      Log "üîí –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª –≤ –∫–æ—Ä–Ω–µ: $($_.Name)"
    }
    elseif ($_.LastWriteTime -gt $CutoffDate) {
      Log "‚åõ –ü—Ä–æ–ø—É—â–µ–Ω –ø–æ –¥–∞—Ç–µ —Ñ–∞–π–ª: $($_.Name)"
    }
    else {
      try {
        Remove-Item -LiteralPath $_.FullName -Force -ErrorAction Stop
        Log "üóëÔ∏è –£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª –≤ –∫–æ—Ä–Ω–µ: $($_.Name)"
      }
      catch {
        Log "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ '$($_.FullName)': $_"
      }
    }
  }
}

# === START ===
Log "üöÄ –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ '$DownloadsPath', –Ω–µ –∏–∑–º–µ–Ω—è–≤—à–µ–≥–æ—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ $MaxAgeDays –¥–Ω–µ–π"
Remove-FilesInRoot -Path $DownloadsPath
Remove-Folders -Path $DownloadsPath
Log "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ"

# https://git-scm.com/docs/git-config
[help]
  autocorrect = 1
[diff]
  algorithm = histogram
  renames = copies
[merge]
  log = true
[alias]
# https://stackoverflow.com/a/22875612
  lolc = filter-branch --parent-filter true -- @^!
# Verbose branches info.
  b = branch -a
# Clone a repository including all submodules.
  c = clone --recursive
# Commit all changes.
  ca = !git add -A && git commit -av
# Commit.
  ci = commit
# Checkout.
  co = checkout
# Delete a branch both locally and remotely.
  del = "!f() { git branch -d \"$1\"; git push origin :\"$1\"; }; f"
# Remove branches that have already been merged with master (delete merged).
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
# Show the staged changes.
  dc = diff --cached
# Create a feature branch and push it back up. Assumes origin/master is used.
  f = "!f() { git checkout master; git pull origin master; git checkout -B \"$1\"; git push -u origin \"$1\"; }; f"
# View abbreviated SHA, description, and graph of the latest 20 commits.
  l = log --graph -n 20 --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
# View alternative, more detailed log, description and graph of latest commits.
  ld = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
# Shortcut to pull master from origin.
  pom = pull origin master
# Verbose remotes info.
  remotes = remote -v
# Add removed files to the staging area.
  rmd = "!f() { git rm $(git ls-files --deleted); }; f"
# Show a concise status of the working directory, along with the branch and
# the number of commits behind and/or ahead.
  s = status --short --branch
# Like "git show myfile", but uses the last commit that changed "myfile".
  showlast = log -n 1 -p
# Show branches that have already been merged with current branch.
  sm = show-merges
# Status.
  st = status
# Verbose tags info.
  tags = tag -l
# Undo last commit.
  undo = reset --soft HEAD~1
# Undo push.
  udp = push -f origin HEAD^:master
[cola]
  spellcheck = false
[feature]
  manyFiles = true
  experimental = true
[core]
  editor = 'C:/Users/User/AppData/Local/Programs/Microsoft VS Code/Code.exe' -w
  sparseCheckout = true
  sparseCheckoutCone = true
  WSLCompat = true
  autocrlf = true
  fscache = true
  fsmonitor = true
  symlinks = true
  # fix for https://github.com/microsoft/vscode/issues/121231#issuecomment-819438763
  sshCommand = C:/Windows/System32/OpenSSH/ssh.exe
[user]
  name = soredake
  email = 5204968+soredake@users.noreply.github.com
# https://github.com/microsoft/vscode/issues/5770#issuecomment-1188658476
[merge]
  tool = 'C:/Users/User/AppData/Local/Programs/Microsoft VS Code/Code.exe'
[mergetool]
  writeToTemp = true
  keepBackup = false
[mergetool "code"]
  cmd = 'C:/Users/User/AppData/Local/Programs/Microsoft VS Code/Code.exe' --wait -m $REMOTE $LOCAL $BASE $MERGED
[push]
  autoSetupRemote = true
[init]
  defaultBranch = main
[pull]
  rebase = true
[credential]
  helper = manager
[credential "https://dev.azure.com"]
  useHttpPath = true
[http]
  sslBackend = openssl
  sslCAInfo = C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt
[diff "astextplain"]
  textconv = astextplain
[diff]
  autoRefreshIndex = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[pack]
  useBitmapBoundaryTraversal = true
  allowPackReuse = multi
[advice]
  statusUoption = false
[safe]
# Upgrading git fails without this
# https://stackoverflow.com/a/77467780
# https://medium.com/@thecodinganalyst/git-detect-dubious-ownership-in-repository-e7f33037a8f
  directory = *
